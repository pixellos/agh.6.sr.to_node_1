{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"BadResponse": {
				"properties": {
					"message": {
						"type": "string"
					},
					"error": {
						"type": "boolean",
						"enum": [
							"true"
						],
						"nullable": false
					}
				},
				"required": [
					"message",
					"error"
				],
				"type": "object"
			},
			"UserBaseEvent": {
				"properties": {
					"who": {
						"type": "string"
					}
				},
				"required": [
					"who"
				],
				"type": "object"
			},
			"AddressDto": {
				"properties": {
					"paymentMethod": {
						"type": "string"
					},
					"postalCode": {
						"type": "string"
					},
					"country": {
						"type": "string"
					},
					"street": {
						"type": "string"
					}
				},
				"required": [
					"paymentMethod",
					"postalCode",
					"country",
					"street"
				],
				"type": "object"
			},
			"AddressSetEvent": {
				"allOf": [
					{
						"$ref": "#/components/schemas/UserBaseEvent"
					},
					{
						"properties": {
							"with": {
								"$ref": "#/components/schemas/AddressDto"
							},
							"what": {
								"type": "string",
								"enum": [
									"AddressSet"
								],
								"nullable": false
							}
						},
						"required": [
							"with",
							"what"
						],
						"type": "object"
					}
				]
			},
			"OrderProduct": {
				"properties": {
					"image": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"shortDescription": {
						"type": "string"
					},
					"price": {
						"type": "number",
						"format": "double"
					},
					"totalPrice": {
						"type": "number",
						"format": "double"
					},
					"quantity": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"image",
					"description",
					"shortDescription",
					"price",
					"totalPrice",
					"quantity",
					"name"
				],
				"type": "object"
			},
			"Order": {
				"properties": {
					"products": {
						"items": {
							"$ref": "#/components/schemas/OrderProduct"
						},
						"type": "array"
					},
					"name": {
						"type": "string"
					},
					"quantity": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"products",
					"name",
					"quantity"
				],
				"type": "object"
			},
			"IssuedEvent": {
				"allOf": [
					{
						"$ref": "#/components/schemas/UserBaseEvent"
					},
					{
						"properties": {
							"with": {
								"$ref": "#/components/schemas/Order"
							},
							"what": {
								"type": "string",
								"enum": [
									"Issued"
								],
								"nullable": false
							}
						},
						"required": [
							"with",
							"what"
						],
						"type": "object"
					}
				]
			},
			"SentEvent": {
				"allOf": [
					{
						"$ref": "#/components/schemas/UserBaseEvent"
					},
					{
						"properties": {
							"with": {
								"properties": {},
								"type": "object"
							},
							"what": {
								"type": "string",
								"enum": [
									"Sent"
								],
								"nullable": false
							}
						},
						"required": [
							"with",
							"what"
						],
						"type": "object"
					}
				]
			},
			"PaidEvent": {
				"allOf": [
					{
						"$ref": "#/components/schemas/UserBaseEvent"
					},
					{
						"properties": {
							"with": {
								"properties": {
									"method": {
										"type": "string"
									},
									"amount": {
										"type": "number",
										"format": "double"
									}
								},
								"required": [
									"method",
									"amount"
								],
								"type": "object"
							},
							"what": {
								"type": "string",
								"enum": [
									"Paid"
								],
								"nullable": false
							}
						},
						"required": [
							"with",
							"what"
						],
						"type": "object"
					}
				]
			},
			"RefundEvent": {
				"allOf": [
					{
						"$ref": "#/components/schemas/UserBaseEvent"
					},
					{
						"properties": {
							"with": {
								"properties": {
									"cause": {
										"type": "string"
									}
								},
								"required": [
									"cause"
								],
								"type": "object"
							},
							"what": {
								"type": "string",
								"enum": [
									"Refunded"
								],
								"nullable": false
							}
						},
						"required": [
							"with",
							"what"
						],
						"type": "object"
					}
				]
			},
			"RequestRefuntEvent": {
				"allOf": [
					{
						"$ref": "#/components/schemas/UserBaseEvent"
					},
					{
						"properties": {
							"with": {
								"properties": {
									"refundCause": {
										"type": "string"
									}
								},
								"required": [
									"refundCause"
								],
								"type": "object"
							},
							"what": {
								"type": "string",
								"enum": [
									"RefundRequested"
								],
								"nullable": false
							}
						},
						"required": [
							"with",
							"what"
						],
						"type": "object"
					}
				]
			},
			"OrderEventUnion": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/AddressSetEvent"
					},
					{
						"$ref": "#/components/schemas/IssuedEvent"
					},
					{
						"$ref": "#/components/schemas/SentEvent"
					},
					{
						"$ref": "#/components/schemas/PaidEvent"
					},
					{
						"$ref": "#/components/schemas/RefundEvent"
					},
					{
						"$ref": "#/components/schemas/RequestRefuntEvent"
					}
				]
			},
			"OkResponse_OrderEventUnion-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/OrderEventUnion"
						},
						"type": "array"
					},
					"error": {
						"type": "boolean",
						"enum": [
							"false"
						],
						"nullable": false
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object"
			},
			"ErrorResponse_OrderEventUnion-Array_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/BadResponse"
					},
					{
						"$ref": "#/components/schemas/OkResponse_OrderEventUnion-Array_"
					}
				]
			},
			"Empty": {
				"properties": {},
				"type": "object"
			},
			"OkResponse_Empty_": {
				"properties": {
					"data": {
						"$ref": "#/components/schemas/Empty"
					},
					"error": {
						"type": "boolean",
						"enum": [
							"false"
						],
						"nullable": false
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object"
			},
			"ErrorResponse_Empty_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/BadResponse"
					},
					{
						"$ref": "#/components/schemas/OkResponse_Empty_"
					}
				]
			},
			"OkResponse_number_": {
				"properties": {
					"data": {
						"type": "number",
						"format": "double"
					},
					"error": {
						"type": "boolean",
						"enum": [
							"false"
						],
						"nullable": false
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object"
			},
			"ErrorResponse_number_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/BadResponse"
					},
					{
						"$ref": "#/components/schemas/OkResponse_number_"
					}
				]
			},
			"Orders.ViewModel": {
				"properties": {
					"user": {
						"type": "string"
					},
					"products": {
						"items": {
							"$ref": "#/components/schemas/OrderProduct"
						},
						"type": "array"
					},
					"quantity": {
						"type": "number",
						"format": "double"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"user",
					"products",
					"quantity",
					"name"
				],
				"type": "object"
			},
			"Orders.AddresPaymentWriteModel": {
				"properties": {
					"paymentMethod": {
						"type": "string"
					},
					"postalCode": {
						"type": "string"
					},
					"country": {
						"type": "string"
					},
					"street": {
						"type": "string"
					}
				},
				"required": [
					"paymentMethod",
					"postalCode",
					"country",
					"street"
				],
				"type": "object"
			},
			"OrderDto": {
				"allOf": [
					{
						"$ref": "#/components/schemas/Order"
					},
					{
						"properties": {
							"status": {
								"type": "string",
								"enum": [
									"Started",
									"Sent",
									"Derived",
									"Returned"
								]
							},
							"id": {
								"type": "string"
							}
						},
						"required": [
							"status"
						],
						"type": "object"
					}
				]
			},
			"OkResponse_OrderDto-Array_": {
				"properties": {
					"data": {
						"items": {
							"$ref": "#/components/schemas/OrderDto"
						},
						"type": "array"
					},
					"error": {
						"type": "boolean",
						"enum": [
							"false"
						],
						"nullable": false
					}
				},
				"required": [
					"data",
					"error"
				],
				"type": "object"
			},
			"ErrorResponse_OrderDto-Array_": {
				"anyOf": [
					{
						"$ref": "#/components/schemas/BadResponse"
					},
					{
						"$ref": "#/components/schemas/OkResponse_OrderDto-Array_"
					}
				]
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "order-microservice",
		"version": "0.1.0",
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/events/list/{type}/{id}": {
			"get": {
				"operationId": "List",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse_OrderEventUnion-Array_"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "type",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"Order"
							]
						}
					}
				]
			}
		},
		"/order/send": {
			"post": {
				"operationId": "Send",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse_Empty_"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"properties": {
									"id": {
										"type": "string"
									}
								},
								"required": [
									"id"
								],
								"type": "object"
							}
						}
					}
				}
			}
		},
		"/order/add": {
			"post": {
				"operationId": "Add",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse_number_"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Orders.ViewModel"
							}
						}
					}
				}
			}
		},
		"/order/pay": {
			"post": {
				"operationId": "Pay",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse_Empty_"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "amount",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "method",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/order/address": {
			"post": {
				"operationId": "Address",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse_Empty_"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Orders.AddresPaymentWriteModel"
							}
						}
					}
				}
			}
		},
		"/order/refund": {
			"post": {
				"operationId": "Refund",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse_Empty_"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "cause",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/order/acceptRefund": {
			"post": {
				"operationId": "AcceptRefund",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse_Empty_"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "cause",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/order/all": {
			"get": {
				"operationId": "All",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse_OrderDto-Array_"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/order/admin/all": {
			"get": {
				"operationId": "AllAdmin",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorResponse_OrderDto-Array_"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}