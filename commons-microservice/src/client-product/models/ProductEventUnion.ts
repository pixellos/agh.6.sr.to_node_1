/* tslint:disable */
/* eslint-disable */
/**
 * product-microservice
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ProductEventUnionAnyOf,
    ProductEventUnionAnyOfFromJSON,
    ProductEventUnionAnyOfFromJSONTyped,
    ProductEventUnionAnyOfToJSON,
    ProductEventUnionAnyOf1,
    ProductEventUnionAnyOf1FromJSON,
    ProductEventUnionAnyOf1FromJSONTyped,
    ProductEventUnionAnyOf1ToJSON,
    ProductEventUnionAnyOf2,
    ProductEventUnionAnyOf2FromJSON,
    ProductEventUnionAnyOf2FromJSONTyped,
    ProductEventUnionAnyOf2ToJSON,
    ProductEventUnionAnyOf3,
    ProductEventUnionAnyOf3FromJSON,
    ProductEventUnionAnyOf3FromJSONTyped,
    ProductEventUnionAnyOf3ToJSON,
    ProductQuantity,
    ProductQuantityFromJSON,
    ProductQuantityFromJSONTyped,
    ProductQuantityToJSON,
} from './';

/**
 * 
 * @export
 * @interface ProductEventUnion
 */
export interface ProductEventUnion {
    /**
     * 
     * @type {ProductQuantity}
     * @memberof ProductEventUnion
     */
    _with: ProductQuantity;
    /**
     * 
     * @type {string}
     * @memberof ProductEventUnion
     */
    what: ProductEventUnionWhatEnum;
}

export function ProductEventUnionFromJSON(json: any): ProductEventUnion {
    return ProductEventUnionFromJSONTyped(json, false);
}

export function ProductEventUnionFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductEventUnion {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        '_with': ProductQuantityFromJSON(json['with']),
        'what': json['what'],
    };
}

export function ProductEventUnionToJSON(value?: ProductEventUnion | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'with': ProductQuantityToJSON(value._with),
        'what': value.what,
    };
}

/**
* @export
* @enum {string}
*/
export enum ProductEventUnionWhatEnum {
    Bought = 'Bought'
}


