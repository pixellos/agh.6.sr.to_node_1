/* tslint:disable */
/* eslint-disable */
/**
 * product-microservice
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Product,
    ProductFromJSON,
    ProductFromJSONTyped,
    ProductToJSON,
    ProductDtoAllOf,
    ProductDtoAllOfFromJSON,
    ProductDtoAllOfFromJSONTyped,
    ProductDtoAllOfToJSON,
} from './';

/**
 * 
 * @export
 * @interface ProductDto
 */
export interface ProductDto {
    /**
     * 
     * @type {Array<string>}
     * @memberof ProductDto
     */
    tags: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof ProductDto
     */
    image: string;
    /**
     * 
     * @type {number}
     * @memberof ProductDto
     */
    price: number;
    /**
     * 
     * @type {string}
     * @memberof ProductDto
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof ProductDto
     */
    shortDescription: string;
    /**
     * 
     * @type {number}
     * @memberof ProductDto
     */
    quantity: number;
    /**
     * 
     * @type {string}
     * @memberof ProductDto
     */
    status: ProductDtoStatusEnum;
    /**
     * 
     * @type {string}
     * @memberof ProductDto
     */
    id?: string;
}

export function ProductDtoFromJSON(json: any): ProductDto {
    return ProductDtoFromJSONTyped(json, false);
}

export function ProductDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProductDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'tags': json['tags'],
        'image': json['image'],
        'price': json['price'],
        'description': json['description'],
        'shortDescription': json['shortDescription'],
        'quantity': json['quantity'],
        'status': json['status'],
        'id': !exists(json, 'id') ? undefined : json['id'],
    };
}

export function ProductDtoToJSON(value?: ProductDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'tags': value.tags,
        'image': value.image,
        'price': value.price,
        'description': value.description,
        'shortDescription': value.shortDescription,
        'quantity': value.quantity,
        'status': value.status,
        'id': value.id,
    };
}

/**
* @export
* @enum {string}
*/
export enum ProductDtoStatusEnum {
    Started = 'Issued',
    Sent = 'Sent',
    Derived = 'Derived',
    Returned = 'Returned'
}


