/* tslint:disable */
/* eslint-disable */
/**
 * order-microservice
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AddressSetEvent,
    AddressSetEventFromJSON,
    AddressSetEventFromJSONTyped,
    AddressSetEventToJSON,
    IssuedEvent,
    IssuedEventFromJSON,
    IssuedEventFromJSONTyped,
    IssuedEventToJSON,
    PaidEvent,
    PaidEventFromJSON,
    PaidEventFromJSONTyped,
    PaidEventToJSON,
    RefundEvent,
    RefundEventFromJSON,
    RefundEventFromJSONTyped,
    RefundEventToJSON,
    RequestRefuntEvent,
    RequestRefuntEventFromJSON,
    RequestRefuntEventFromJSONTyped,
    RequestRefuntEventToJSON,
    RequestRefuntEventAllOfWith,
    RequestRefuntEventAllOfWithFromJSON,
    RequestRefuntEventAllOfWithFromJSONTyped,
    RequestRefuntEventAllOfWithToJSON,
    SentEvent,
    SentEventFromJSON,
    SentEventFromJSONTyped,
    SentEventToJSON,
} from './';

/**
 * 
 * @export
 * @interface OrderEventUnion
 */
export interface OrderEventUnion {
    /**
     * 
     * @type {string}
     * @memberof OrderEventUnion
     */
    who: string;
    /**
     * 
     * @type {RequestRefuntEventAllOfWith}
     * @memberof OrderEventUnion
     */
    _with: RequestRefuntEventAllOfWith;
    /**
     * 
     * @type {string}
     * @memberof OrderEventUnion
     */
    what: OrderEventUnionWhatEnum;
}

export function OrderEventUnionFromJSON(json: any): OrderEventUnion {
    return OrderEventUnionFromJSONTyped(json, false);
}

export function OrderEventUnionFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderEventUnion {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'who': json['who'],
        '_with': RequestRefuntEventAllOfWithFromJSON(json['with']),
        'what': json['what'],
    };
}

export function OrderEventUnionToJSON(value?: OrderEventUnion | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'who': value.who,
        'with': RequestRefuntEventAllOfWithToJSON(value._with),
        'what': value.what,
    };
}

/**
* @export
* @enum {string}
*/
export enum OrderEventUnionWhatEnum {
    RefundRequested = 'RefundRequested'
}


